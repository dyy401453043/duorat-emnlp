db_name:concert_singer
gold:SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
pred:SELECT Avg(singer.Age), Min(singer.Age), Max(singer.Age) FROM singer WHERE singer.Is_male = "f"

db_name:concert_singer
gold:select max(capacity), average from stadium
pred:SELECT Max(stadium.Capacity), Avg(stadium.Average) FROM stadium

db_name:concert_singer
gold:SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
pred:SELECT stadium.Name, stadium.Capacity FROM stadium ORDER BY stadium.Highest Desc LIMIT 1

db_name:concert_singer
gold:SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
pred:SELECT singer.Name, Count(*) FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID GROUP BY singer.Name

db_name:concert_singer
gold:select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
pred:SELECT Count(*) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID ORDER BY stadium.Capacity Desc LIMIT 1

db_name:concert_singer
gold:select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
pred:SELECT Count(*) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID ORDER BY stadium.Capacity Desc LIMIT 1

db_name:pets_1
gold:SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
pred:SELECT Count(*) FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Age > 20

db_name:pets_1
gold:SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
pred:SELECT Count(*) FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Age > 20

db_name:pets_1
gold:SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
pred:SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Has_Pet.PetID = "f" INTERSECT SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Has_Pet.PetID = "dogs"

db_name:pets_1
gold:SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
pred:SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = "cat")

db_name:pets_1
gold:SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
pred:SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet WHERE Pets.PetType = "cat")

db_name:pets_1
gold:SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
pred:SELECT Student.StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet WHERE Pets.PetType = "cat"

db_name:pets_1
gold:SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
pred:SELECT Student.StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet

db_name:pets_1
gold:SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
pred:SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Has_Pet.StuID = Student.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = "dog" EXCEPT SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Has_Pet.StuID = Student.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = "cat"

db_name:pets_1
gold:SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
pred:SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Pets.PetType = "dog" EXCEPT SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Pets.PetType = "cat"

db_name:pets_1
gold:SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
pred:SELECT Has_Pet.PetID FROM Has_Pet JOIN Has_Pet WHERE Student.LName = "Smith"

db_name:pets_1
gold:SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
pred:SELECT Has_Pet.PetID FROM Has_Pet JOIN Has_Pet WHERE Student.LName = "Smith"

db_name:pets_1
gold:SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid
pred:SELECT Count(*), Has_Pet.StuID FROM Has_Pet GROUP BY Has_Pet.StuID

db_name:pets_1
gold:SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
pred:SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age = 3

db_name:pets_1
gold:SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
pred:SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Student WHERE Pets.pet_age = 3 AND Student.Age = "cat"

db_name:car_1
gold:SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
pred:SELECT continents.Continent, countries.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent

db_name:car_1
gold:SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
pred:SELECT continents.Continent, countries.CountryName, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent

db_name:car_1
gold:SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
pred:SELECT car_makers.Maker, car_makers.FullName, Count(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id

db_name:car_1
gold:SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
pred:SELECT car_makers.Maker, car_makers.FullName, Count(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id

db_name:car_1
gold:SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
pred:SELECT model_list.Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id ORDER BY cars_data.Horsepower Asc LIMIT 1

db_name:car_1
gold:SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
pred:SELECT model_list.Model FROM cars_data JOIN cars_data ORDER BY cars_data.Horsepower Asc LIMIT 1

db_name:car_1
gold:SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
pred:SELECT model_list.Model FROM model_list JOIN car_names ON model_list.ModelId = car_names.MakeId WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)

db_name:car_1
gold:SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
pred:SELECT model_list.Model FROM model_list WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)

db_name:car_1
gold:SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
pred:SELECT car_makers.Maker FROM car_makers JOIN car_names WHERE cars_data.Year = 1970

db_name:car_1
gold:SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
pred:SELECT DISTINCT car_makers.Maker FROM car_makers JOIN cars_data ON car_makers.Id = cars_data.Id WHERE cars_data.Year = 1970

db_name:car_1
gold:SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
pred:SELECT car_names.Make, car_names.MakeId FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Year Asc LIMIT 1

db_name:car_1
gold:SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
pred:SELECT car_makers.Maker, cars_data.Year FROM car_makers JOIN car_names JOIN cars_data ON car_makers.Id = cars_data.Id AND car_names.MakeId = cars_data.Id ORDER BY cars_data.Year Asc LIMIT 1

db_name:car_1
gold:SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
pred:SELECT DISTINCT model_list.Model FROM model_list JOIN car_names WHERE cars_data.Year > 1980

db_name:car_1
gold:SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
pred:SELECT DISTINCT model_list.Model FROM model_list WHERE model_list.Model > 1980

db_name:car_1
gold:SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
pred:SELECT continents.Continent, Count(*) FROM continents JOIN countries GROUP BY continents.Continent

db_name:car_1
gold:SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
pred:SELECT continents.Continent, Count(*) FROM continents JOIN countries GROUP BY continents.Continent

db_name:car_1
gold:SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
pred:SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1

db_name:car_1
gold:SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
pred:SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1

db_name:car_1
gold:select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;
pred:SELECT Count(*), car_makers.FullName FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.Maker

db_name:car_1
gold:SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;
pred:SELECT Count(*), car_makers.FullName, car_makers.Maker FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.Maker

db_name:car_1
gold:SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
pred:SELECT cars_data.Accelerate FROM car_names ON car_names.MakeId = car_names.MakeId JOIN car_makers WHERE car_makers.Maker = "amc hornet sportabout" AND car_makers.Maker = "sw"

db_name:car_1
gold:SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
pred:SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN car_makers ON car_names.MakeId = car_makers.Id WHERE car_names.Make = "amc hornet sportabout" AND car_names.Make = "sw"

db_name:car_1
gold:SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
pred:SELECT Count(*) FROM countries WHERE countries.CountryName = "usa"

db_name:car_1
gold:SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
pred:SELECT Count(*) FROM countries WHERE countries.CountryName = "usa"

db_name:car_1
gold:SELECT Maker ,  Model FROM MODEL_LIST;
pred:SELECT car_makers.Maker, model_list.Model FROM model_list

db_name:car_1
gold:SELECT Maker ,  Model FROM MODEL_LIST;
pred:SELECT car_makers.Maker, model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id

db_name:car_1
gold:SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
pred:SELECT countries.CountryName, car_makers.Id FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING Count(*) >= 1

db_name:car_1
gold:SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
pred:SELECT countries.CountryName FROM continents JOIN countries ON continents.ContId = countries.Continent AND countries.CountryId = countries.Continent JOIN car_makers WHERE continents.Continent = "europe" GROUP BY car_makers.Country HAVING Count(*) >= 3

db_name:car_1
gold:SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
pred:SELECT countries.CountryName FROM continents JOIN countries ON continents.ContId = countries.Continent WHERE continents.Continent = "professor" GROUP BY countries.CountryName HAVING Count(*) >= 3

db_name:car_1
gold:SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
pred:SELECT Max(cars_data.Horsepower), cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 3

db_name:car_1
gold:SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
pred:SELECT Max(cars_data.Horsepower), cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 3

db_name:car_1
gold:SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;
pred:SELECT model_list.Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id ORDER BY cars_data.Horsepower Desc LIMIT 1

db_name:car_1
gold:select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;
pred:SELECT model_list.Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id ORDER BY cars_data.MPG Desc LIMIT 1

db_name:car_1
gold:SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
pred:SELECT Avg(cars_data.Edispl) FROM cars_data

db_name:car_1
gold:SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
pred:SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_names.Model ORDER BY Count(*) Desc LIMIT 1

db_name:car_1
gold:SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
pred:SELECT model_list.Model FROM model_list GROUP BY model_list.Model ORDER BY Count(*) Desc LIMIT 1

db_name:car_1
gold:SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
pred:SELECT car_makers.Maker, car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) > 3

db_name:car_1
gold:SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
pred:SELECT car_makers.Maker, model_list.Maker FROM model_list JOIN car_makers ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) > 3

db_name:car_1
gold:SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
pred:SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = "General Motors" OR car_makers.FullName > 3500

db_name:car_1
gold:SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
pred:SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN cars_data ON cars_data.Id = cars_data.Id WHERE car_makers.FullName = "General" OR cars_data.Weight > 3500

db_name:car_1
gold:select distinct year from cars_data where weight between 3000 and 4000;
pred:SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight > 3000

db_name:car_1
gold:SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
pred:SELECT cars_data.Cylinders FROM cars_data WHERE cars_data.Accelerate = "volvo" ORDER BY cars_data.Accelerate Asc LIMIT 1

db_name:car_1
gold:SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
pred:SELECT cars_data.Cylinders FROM cars_data WHERE cars_data.Accelerate = "volvo" ORDER BY cars_data.Accelerate Asc LIMIT 1

db_name:car_1
gold:SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
pred:SELECT Count(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT Max(cars_data.Accelerate) FROM cars_data)

db_name:car_1
gold:SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
pred:SELECT Count(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT Max(cars_data.Accelerate) FROM cars_data)

db_name:car_1
gold:select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
pred:SELECT Count(*) FROM (SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY car_makers.Country HAVING Count(*) > 2)

db_name:car_1
gold:select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
pred:SELECT Count(*) FROM (SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY car_makers.Country HAVING Count(*) > 2)

db_name:car_1
gold:SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
pred:SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower Desc LIMIT 1

db_name:car_1
gold:SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
pred:SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower Desc LIMIT 1

db_name:car_1
gold:SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;
pred:SELECT car_names.MakeId, car_makers.Maker FROM car_names WHERE cars_data.Horsepower > 3 EXCEPT SELECT car_names.MakeId, car_names.Make FROM cars_data JOIN car_names

db_name:car_1
gold:select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;
pred:SELECT car_names.MakeId, car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders < 4

db_name:car_1
gold:select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
pred:SELECT Max(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980

db_name:car_1
gold:SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
pred:SELECT model_list.Model FROM model_list WHERE model_list.Model > 3500 EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = "Ford0"

db_name:car_1
gold:SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
pred:SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.ModelId = car_names.MakeId WHERE cars_data.Weight < 3500 EXCEPT SELECT car_names.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = "Ford0"

db_name:car_1
gold:SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
pred:SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)

db_name:car_1
gold:SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
pred:SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)

db_name:car_1
gold:select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;
pred:SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker HAVING Count(*) > 3

db_name:car_1
gold:SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;
pred:SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker HAVING Count(*) > 3

db_name:car_1
gold:SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';
pred:SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING Count(*) > 3 UNION SELECT countries.CountryId, countries.CountryName FROM countries ON countries.CountryId = countries.CountryId JOIN car_makers WHERE model_list.Model = "fiat" HAVING Count(*) > 3

db_name:car_1
gold:select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';
pred:SELECT countries.CountryId, countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.CountryId HAVING Count(*) > 3 UNION SELECT countries.CountryId, countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE car_makers.Maker = "fiat" HAVING Count(*) > 3

db_name:flight_2
gold:SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
pred:SELECT Count(*) FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport WHERE flights.SourceAirport = "ATO"

db_name:flight_2
gold:SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
pred:SELECT Count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = "Aberdeen" AND airports.AirportName = "Ashley"

db_name:flight_2
gold:SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
pred:SELECT Count(*) FROM airports JOIN flights ON flights.SourceAirport = airports.AirportCode WHERE airports.City = "Aberdeen" AND airports.AirportName = "Ashley"

db_name:flight_2
gold:SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
pred:SELECT Count(*) FROM airlines JOIN flights ON airlines.uid = flights.FlightNo WHERE airports.City = "Aberdeen" AND airlines.Airline = "United Airlines Airlines"

db_name:flight_2
gold:SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
pred:SELECT airports.City FROM airports GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1

db_name:flight_2
gold:SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
pred:SELECT airports.City FROM airports GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1

db_name:flight_2
gold:SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
pred:SELECT flights.SourceAirport FROM flights GROUP BY flights.SourceAirport ORDER BY Count(*) Desc LIMIT 1

db_name:flight_2
gold:SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
pred:SELECT flights.SourceAirport FROM flights GROUP BY flights.SourceAirport ORDER BY Count(*) Desc LIMIT 1

db_name:flight_2
gold:SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
pred:SELECT flights.SourceAirport FROM flights GROUP BY flights.SourceAirport ORDER BY Count(*) Asc LIMIT 1

db_name:flight_2
gold:SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
pred:SELECT flights.DestAirport FROM flights GROUP BY flights.DestAirport ORDER BY Count(*) Asc LIMIT 1

db_name:flight_2
gold:SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
pred:SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY flights.Airline ORDER BY Count(*) Asc LIMIT 1

db_name:flight_2
gold:SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
pred:SELECT airlines.Abbreviation, airlines.Country FROM airlines WHERE airlines.Airline = "airilne" GROUP BY airlines.Abbreviation ORDER BY Count(*) Asc LIMIT 1

db_name:flight_2
gold:SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
pred:SELECT airlines.Airline FROM airlines JOIN airports WHERE flights.SourceAirport = "CV" EXCEPT SELECT airlines.Airline FROM flights JOIN airports ON flights.Airline = airports.AirportCode WHERE flights.SourceAirport = "APG"

db_name:flight_2
gold:SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
pred:SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY airlines.uid HAVING Count(*) >= 10

db_name:flight_2
gold:SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
pred:SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY airlines.uid HAVING Count(*) >= 10

db_name:flight_2
gold:SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
pred:SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.Airline < 200

db_name:flight_2
gold:SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
pred:SELECT airports.AirportName FROM airports WHERE airports.AirportCode NOT IN (SELECT flights.SourceAirport FROM flights)

db_name:flight_2
gold:SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
pred:SELECT airports.AirportName FROM airports WHERE airports.AirportCode NOT IN (SELECT flights.SourceAirport FROM flights)

db_name:employee_hire_evaluation
gold:SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
pred:SELECT shop.Name, shop.District FROM shop GROUP BY shop.Number_products ORDER BY Sum(shop.Number_products) Desc LIMIT 1

db_name:employee_hire_evaluation
gold:SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
pred:SELECT shop.Name, shop.District FROM shop GROUP BY shop.Number_products ORDER BY Sum(shop.Number_products) Desc LIMIT 1

db_name:employee_hire_evaluation
gold:SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
pred:SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID GROUP BY evaluation.Employee_ID ORDER BY evaluation.Bonus Desc LIMIT 1

db_name:employee_hire_evaluation
gold:SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
pred:SELECT shop.Name, Count(*) FROM hiring JOIN shop ON hiring.Shop_ID = shop.Shop_ID GROUP BY hiring.Shop_ID

db_name:employee_hire_evaluation
gold:SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
pred:SELECT shop.Name, Count(*) FROM shop JOIN hiring ON hiring.Shop_ID = shop.Shop_ID JOIN shop GROUP BY shop.Shop_ID

db_name:cre_Doc_Template_Mgt
gold:SELECT count(DISTINCT template_id) FROM Documents
pred:SELECT Count(DISTINCT Templates.Template_Type_Code) FROM Templates

db_name:cre_Doc_Template_Mgt
gold:SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
pred:SELECT Count(*) FROM Templates WHERE Templates.Template_Type_Code = "PP"

db_name:cre_Doc_Template_Mgt
gold:SELECT min(Version_Number) ,  template_type_code FROM Templates
pred:SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates

db_name:cre_Doc_Template_Mgt
gold:SELECT min(Version_Number) ,  template_type_code FROM Templates
pred:SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates ORDER BY Templates.Version_Number Asc LIMIT 1

db_name:cre_Doc_Template_Mgt
gold:SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
pred:SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code

db_name:cre_Doc_Template_Mgt
gold:SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
pred:SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code

db_name:cre_Doc_Template_Mgt
gold:SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
pred:SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1

db_name:cre_Doc_Template_Mgt
gold:SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
pred:SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1

db_name:cre_Doc_Template_Mgt
gold:SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
pred:SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT Templates.Template_Type_Code FROM Templates

db_name:cre_Doc_Template_Mgt
gold:SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
pred:SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT Documents.Template_ID FROM Templates

db_name:cre_Doc_Template_Mgt
gold:SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
pred:SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code

db_name:cre_Doc_Template_Mgt
gold:SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
pred:SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code

db_name:cre_Doc_Template_Mgt
gold:SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
pred:SELECT Templates.Template_ID FROM Ref_Template_Types JOIN Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = "Presentation"

db_name:cre_Doc_Template_Mgt
gold:select other_details from paragraphs where paragraph_text like 'korea'
pred:SELECT Paragraphs.Other_Details FROM Paragraphs WHERE Paragraphs.Paragraph_Text = "Korea%"

db_name:cre_Doc_Template_Mgt
gold:SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
pred:SELECT Paragraphs.Document_ID, Count(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc

db_name:cre_Doc_Template_Mgt
gold:SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
pred:SELECT Paragraphs.Document_ID, Count(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc

db_name:cre_Doc_Template_Mgt
gold:SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
pred:SELECT Documents.Document_ID FROM Documents GROUP BY Documents.Document_ID HAVING Count(*) >= 2

db_name:cre_Doc_Template_Mgt
gold:SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
pred:SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) <= 2

db_name:cre_Doc_Template_Mgt
gold:SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
pred:SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text like "%Brazil%"

db_name:course_teach
gold:SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
pred:SELECT teacher.Name FROM teacher GROUP BY teacher.Name HAVING Count(*) >= 2

db_name:course_teach
gold:SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
pred:SELECT teacher.Name FROM teacher GROUP BY teacher.Name HAVING Count(*) >= 2

db_name:museum_visit
gold:SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4
pred:SELECT Avg(visitor.Age) FROM visitor WHERE visitor.Level_of_membership != 4

db_name:museum_visit
gold:SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
pred:SELECT visitor.Name, visitor.Level_of_membership FROM visitor WHERE visitor.Level_of_membership > 4 ORDER BY visitor.Age Asc

db_name:museum_visit
gold:SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1
pred:SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visit.visitor_ID ORDER BY Sum(visit.Num_of_Ticket) Desc LIMIT 1

db_name:museum_visit
gold:SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit
pred:SELECT Avg(visit.Num_of_Ticket), Max(visit.Total_spent) FROM visit

db_name:museum_visit
gold:SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1
pred:SELECT Sum(visit.Num_of_Ticket) FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE visitor.Level_of_membership = 1

db_name:museum_visit
gold:SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)
pred:SELECT Count(*) FROM museum WHERE museum.Museum_ID NOT IN (SELECT visit.Museum_ID FROM visit WHERE museum.Open_Year > 2010)

db_name:wta_1
gold:SELECT min(loser_rank) FROM matches
pred:SELECT Max(matches.loser_rank) FROM matches

db_name:wta_1
gold:SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
pred:SELECT players.first_name FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.year = 2013 INTERSECT SELECT players.first_name FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.year = 2016

db_name:wta_1
gold:SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
pred:SELECT players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.year = 2013 INTERSECT SELECT players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.year = 2016

db_name:wta_1
gold:SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
pred:SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date Desc LIMIT 1

db_name:wta_1
gold:SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
pred:SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date Desc LIMIT 1

db_name:wta_1
gold:SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
pred:SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.player_id ORDER BY Count(*) Desc LIMIT 1

db_name:wta_1
gold:SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
pred:SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.player_id ORDER BY Count(*) Desc LIMIT 1

db_name:wta_1
gold:SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
pred:SELECT matches.winner_name, matches.winner_rank_points FROM matches JOIN matches GROUP BY matches.winner_name ORDER BY Count(*) Desc LIMIT 1

db_name:wta_1
gold:SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
pred:SELECT players.first_name, Avg(rankings.ranking) FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY rankings.player_id

db_name:wta_1
gold:SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
pred:SELECT rankings.ranking_date, Count(*) FROM rankings GROUP BY rankings.ranking_date

db_name:wta_1
gold:SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
pred:SELECT rankings.ranking_date, Count(*) FROM rankings GROUP BY rankings.ranking_date

db_name:wta_1
gold:SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
pred:SELECT Count(DISTINCT matches.winner_name) FROM matches JOIN players ON matches.loser_id = players.player_id WHERE players.hand = "f" AND matches.winner_hand = "WTA" INTERSECT SELECT matches.winner_hand FROM matches JOIN players ON matches.loser_id = players.player_id WHERE players.hand = "WTA"

db_name:wta_1
gold:SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
pred:SELECT Count(*) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.winner_hand = "f" AND matches.tourney_name = "WTA"

db_name:battle_death
gold:SELECT name ,  date FROM battle
pred:SELECT battle.name, battle.date, battle.result FROM battle

db_name:battle_death
gold:SELECT max(killed) ,  min(killed) FROM death
pred:SELECT Max(death.killed), Min(death.killed), death.killed FROM death GROUP BY death.killed

db_name:battle_death
gold:SELECT avg(injured) FROM death
pred:SELECT Avg(death.injured), death.injured FROM death GROUP BY death.injured

db_name:battle_death
gold:SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
pred:SELECT death.injured, death.injured FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = "t"

db_name:battle_death
gold:SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10
pred:SELECT battle.id, battle.name FROM battle JOIN death ON battle.result = death.id GROUP BY battle.id HAVING Sum(death.killed) > 10

db_name:battle_death
gold:SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
pred:SELECT ship.id, ship.name FROM ship ON ship.id = ship.id JOIN death GROUP BY ship.id ORDER BY Sum(death.injured) Desc LIMIT 1

db_name:battle_death
gold:SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
pred:SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle WHERE ship.lost_in_battle NOT IN (SELECT ship.lost_in_battle FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.location = "English Channel")

db_name:student_transcripts_tracking
gold:SELECT line_1 ,  line_2 FROM addresses
pred:SELECT Addresses.line_1 FROM Addresses WHERE Addresses.line_1 like "%1%"

db_name:student_transcripts_tracking
gold:SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
pred:SELECT Count(DISTINCT Courses.course_name) FROM Courses

db_name:student_transcripts_tracking
gold:SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
pred:SELECT Count(DISTINCT Degree_Programs.degree_program_id) FROM Degree_Programs

db_name:student_transcripts_tracking
gold:SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
pred:SELECT Courses.course_name, Sections.course_id FROM Courses JOIN Sections ON Courses.course_id = Sections.course_id GROUP BY Sections.course_id HAVING Count(*) < 2

db_name:student_transcripts_tracking
gold:SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
pred:SELECT Semesters.semester_name, Count(*) FROM Student_Enrolment JOIN Semesters ON Student_Enrolment.semester_id = Semesters.semester_id GROUP BY Student_Enrolment.semester_id ORDER BY Count(*) Desc LIMIT 1

db_name:student_transcripts_tracking
gold:SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
pred:SELECT Students.first_name, Students.middle_name, Students.last_name, Student_Enrolment.semester_id FROM Student_Enrolment JOIN Students ON Student_Enrolment.student_id = Students.student_id GROUP BY Students.student_id HAVING Count(*) = 2

db_name:student_transcripts_tracking
gold:SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
pred:SELECT Students.first_name, Students.middle_name, Students.last_name FROM Student_Enrolment JOIN Students ON Student_Enrolment.student_id = Students.student_id GROUP BY Student_Enrolment.student_id HAVING Count(*) = 2

db_name:student_transcripts_tracking
gold:SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
pred:SELECT Students.first_name, Students.middle_name, Students.last_name FROM Student_Enrolment JOIN Student_Enrolment JOIN Degree_Programs WHERE Degree_Programs.degree_summary_name = "Bachelor"

db_name:student_transcripts_tracking
gold:SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
pred:SELECT Students.first_name, Students.middle_name, Students.last_name FROM Student_Enrolment ON Student_Enrolment.student_id = Student_Enrolment.student_enrolment_id JOIN Students ON Student_Enrolment.student_id = Students.student_id JOIN Students WHERE Student_Enrolment.degree_program_id = "m"

db_name:student_transcripts_tracking
gold:SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
pred:SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY Courses.course_name ORDER BY Count(*) Desc LIMIT 1

db_name:student_transcripts_tracking
gold:SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
pred:SELECT Degree_Programs.degree_summary_name FROM Courses JOIN Degree_Programs JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id AND Student_Enrolment_Courses.student_enrolment_id = Degree_Programs.degree_program_id GROUP BY Courses.course_name ORDER BY Count(*) Desc LIMIT 1

db_name:student_transcripts_tracking
gold:SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
pred:SELECT Student_Enrolment_Courses.course_id, Student_Enrolment_Courses.course_id FROM Student_Enrolment_Courses GROUP BY Student_Enrolment_Courses.course_id ORDER BY Count(*) Desc LIMIT 1

db_name:student_transcripts_tracking
gold:SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
pred:SELECT Student_Enrolment.student_id, Students.first_name, Count(*) FROM Student_Enrolment JOIN Student_Enrolment_Courses ON Student_Enrolment.student_enrolment_id = Student_Enrolment_Courses.student_enrolment_id GROUP BY Student_Enrolment.student_id ORDER BY Count(*) Desc LIMIT 1

db_name:student_transcripts_tracking
gold:SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
pred:SELECT Students.first_name, Students.middle_name, Count(*) FROM Student_Enrolment JOIN Students ON Student_Enrolment.student_id = Students.student_id GROUP BY Student_Enrolment.student_id ORDER BY Count(*) Desc LIMIT 1

db_name:student_transcripts_tracking
gold:SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
pred:SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY Student_Enrolment_Courses.course_id ORDER BY Count(*) Desc LIMIT 1

db_name:student_transcripts_tracking
gold:SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
pred:SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY Student_Enrolment_Courses.course_id ORDER BY Count(*) Desc LIMIT 1

db_name:student_transcripts_tracking
gold:SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
pred:SELECT Students.last_name FROM Students WHERE Students.current_address_id IN (SELECT Student_Enrolment.student_id FROM Student_Enrolment WHERE Addresses.state_province_county = "North" EXCEPT SELECT Student_Enrolment.student_id FROM Student_Enrolment WHERE Addresses.state_province_county = "North")

db_name:student_transcripts_tracking
gold:SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
pred:SELECT Students.last_name FROM Students WHERE Students.student_id IN (SELECT Student_Enrolment.student_id FROM Student_Enrolment WHERE Addresses.state_province_county = "North" EXCEPT SELECT Student_Enrolment.student_id FROM Student_Enrolment JOIN Student_Enrolment)

db_name:student_transcripts_tracking
gold:SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
pred:SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.date_first_registered Asc LIMIT 1

db_name:student_transcripts_tracking
gold:SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
pred:SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.date_first_registered Asc LIMIT 1

db_name:student_transcripts_tracking
gold:SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
pred:SELECT Addresses.address_id, Addresses.line_1 FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id GROUP BY Students.current_address_id ORDER BY Count(*) Desc LIMIT 1

db_name:student_transcripts_tracking
gold:SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
pred:SELECT Max(Transcripts.transcript_date) FROM Transcripts

db_name:student_transcripts_tracking
gold:SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
pred:SELECT Max(Transcripts.transcript_date) FROM Transcripts

db_name:student_transcripts_tracking
gold:SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
pred:SELECT Count(*), Transcripts.transcript_id FROM Transcripts GROUP BY Transcripts.transcript_id ORDER BY Count(*) Desc LIMIT 1

db_name:student_transcripts_tracking
gold:SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
pred:SELECT Count(*), Transcripts.transcript_id FROM Transcripts JOIN Student_Enrolment_Courses GROUP BY Transcripts.transcript_id ORDER BY Count(*) Desc LIMIT 1

db_name:student_transcripts_tracking
gold:SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
pred:SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts GROUP BY Transcripts.transcript_id ORDER BY Count(*) Asc LIMIT 1

db_name:student_transcripts_tracking
gold:SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
pred:SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts GROUP BY Transcripts.transcript_id ORDER BY Count(*) Asc LIMIT 1

db_name:student_transcripts_tracking
gold:SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
pred:SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name = "Master" INTERSECT SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name = "Bachelor"

db_name:student_transcripts_tracking
gold:SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
pred:SELECT Student_Enrolment.semester_id FROM Student_Enrolment WHERE Student_Enrolment.degree_program_id = "yes" INTERSECT SELECT Student_Enrolment.semester_id FROM Student_Enrolment WHERE Student_Enrolment.degree_program_id = "Bachelor"

db_name:student_transcripts_tracking
gold:SELECT count(DISTINCT current_address_id) FROM Students
pred:SELECT DISTINCT Students.permanent_address_id FROM Students

db_name:student_transcripts_tracking
gold:select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
pred:SELECT Students.first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = "Haiti"UNION SELECT Students.first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = "09700166582" AND Students.cell_mobile_number = "09700166582"

db_name:student_transcripts_tracking
gold:select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
pred:SELECT Students.first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = "Haiti" AND Students.cell_mobile_number = "09700166582"UNION SELECT Students.first_name FROM Students WHERE Addresses.state_province_county = "09700166582"

db_name:tvshow
gold:SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
pred:SELECT Cartoon.Title FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio"

db_name:tvshow
gold:SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
pred:SELECT TV_series.Channel FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_series.Episode = "A Love of a Lifetime Lifetime"

db_name:tvshow
gold:select production_code ,  channel from cartoon order by original_air_date desc limit 1
pred:SELECT Cartoon.Channel, Cartoon.Original_air_date FROM Cartoon ORDER BY Cartoon.Original_air_date Desc LIMIT 1

db_name:tvshow
gold:SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
pred:SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel

db_name:tvshow
gold:SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
pred:SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = (SELECT TV_Channel.Hight_definition_TV FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = "yes")

db_name:tvshow
gold:SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
pred:SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM Cartoon JOIN Cartoon WHERE Cartoon.Written_by = "Todd Casey"

db_name:tvshow
gold:SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
pred:SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.id HAVING Count(*) > 2

db_name:tvshow
gold:SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
pred:SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM TV_Channel ON TV_Channel.id = TV_Channel.id JOIN Cartoon WHERE Cartoon.Directed_by = "Ben Jones"

db_name:tvshow
gold:SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
pred:SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM Cartoon JOIN TV_series WHERE Cartoon.Directed_by = "Ben Jones"

db_name:poker_player
gold:SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
pred:SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY poker_player.Final_Table_Made ORDER BY Count(*) Asc

db_name:poker_player
gold:SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
pred:SELECT people.Name FROM people EXCEPT SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID

db_name:poker_player
gold:SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
pred:SELECT people.Name FROM people EXCEPT SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID

db_name:voter_1
gold:SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1
pred:SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number ORDER BY CONTESTANTS.contestant_number Asc LIMIT 1

db_name:voter_1
gold:SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1
pred:SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE GROUP BY AREA_CODE_STATE.area_code ORDER BY Count(*) Desc LIMIT 1

db_name:voter_1
gold:SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
pred:SELECT AREA_CODE_STATE.area_code FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = "Taba Gehling" INTERSECT SELECT AREA_CODE_STATE.area_code FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = "Kellys"

db_name:world_1
gold:SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
pred:SELECT Sum(country.SurfaceArea) FROM country WHERE country.Continent = "Carr"

db_name:world_1
gold:SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
pred:SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = "Aruba" GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1

db_name:world_1
gold:SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
pred:SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = "Aruba" GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1

db_name:world_1
gold:SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
pred:SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Continent = "Central Africa"

db_name:world_1
gold:SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
pred:SELECT Max(country.Population), Max(country.GNP) FROM country WHERE country.Continent = "Asia"

db_name:world_1
gold:SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
pred:SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Continent = "f" AND country.Name = "African"

db_name:world_1
gold:SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
pred:SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Continent = "Africa" AND country.Name = "

db_name:world_1
gold:SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
pred:SELECT Sum(country.SurfaceArea) FROM country WHERE country.Continent = "Asia" AND country.Region = "Europe"

db_name:world_1
gold:SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
pred:SELECT city.Population FROM city WHERE city.District = "Gelderland"

db_name:world_1
gold:SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
pred:SELECT Avg(country.GNP), Sum(country.Population) FROM country WHERE country.Name = "US"

db_name:world_1
gold:SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
pred:SELECT Count(*) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = "Aruba"

db_name:world_1
gold:SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
pred:SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage WHERE country.Name = "Afghanistan"

db_name:world_1
gold:SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
pred:SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage WHERE countrylanguage.IsOfficial = "Afghanistan"

db_name:world_1
gold:SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
pred:SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY countrylanguage.CountryCode ORDER BY Count(*) Desc LIMIT 1

db_name:world_1
gold:SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
pred:SELECT country.Name FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode GROUP BY countrylanguage.CountryCode ORDER BY Count(*) Desc LIMIT 1

db_name:world_1
gold:SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
pred:SELECT country.Continent FROM countrylanguage GROUP BY country.Continent ORDER BY Count(DISTINCT countrylanguage.Language) Desc LIMIT 1

db_name:world_1
gold:SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
pred:SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = "English" INTERSECT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = "Dutch"

db_name:world_1
gold:SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
pred:SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "English" INTERSECT SELECT * FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "Dutch"

db_name:world_1
gold:SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
pred:SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "English" INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "French"

db_name:world_1
gold:SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
pred:SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "English" INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "French"

db_name:world_1
gold:select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" and isofficial  =  "t" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch" and isofficial  =  "t"
pred:SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = "English" OR countrylanguage.Language = "Dutch"

db_name:world_1
gold:SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"
pred:SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = "English" OR countrylanguage.Language = "Dutch"

db_name:world_1
gold:SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
pred:SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1

db_name:world_1
gold:SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
pred:SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = "republic"

db_name:world_1
gold:SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
pred:SELECT city.Name FROM city WHERE city.Population = "English" ORDER BY city.Population Desc LIMIT 1

db_name:world_1
gold:SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
pred:SELECT city.Name FROM city WHERE city.Population = "English" ORDER BY city.Population Desc LIMIT 1

db_name:world_1
gold:SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
pred:SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.SurfaceArea = "f" ORDER BY country.SurfaceArea Desc LIMIT 1

db_name:world_1
gold:SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
pred:SELECT Avg(country.LifeExpectancy) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != "English"

db_name:world_1
gold:SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
pred:SELECT Avg(country.LifeExpectancy) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != "English"

db_name:world_1
gold:SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
pred:SELECT Sum(country.Population) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != "English"

db_name:world_1
gold:SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
pred:SELECT Sum(country.Population) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != "English"

db_name:world_1
gold:SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
pred:SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = "Beatrix"

db_name:world_1
gold:SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
pred:SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = "Beatrix"

db_name:world_1
gold:SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
pred:SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930

db_name:world_1
gold:SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
pred:SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage WHERE country.IndepYear < 1930

db_name:world_1
gold:SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
pred:SELECT country.Name FROM country WHERE country.SurfaceArea > (SELECT Max(country.SurfaceArea) FROM country WHERE country.Continent = "Europe")

db_name:world_1
gold:SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
pred:SELECT country.Name FROM country WHERE country.SurfaceArea > (SELECT Max(country.SurfaceArea) FROM country WHERE country.Continent = "Europe")

db_name:world_1
gold:SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")
pred:SELECT country.Name FROM country WHERE country.Population < (SELECT Min(country.Population) FROM country WHERE country.Continent = "African")

db_name:world_1
gold:SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia")
pred:SELECT country.Name FROM country WHERE country.Population < (SELECT Min(country.Population) FROM country WHERE country.Continent = "Asia")

db_name:world_1
gold:SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa")
pred:SELECT country.Name FROM country WHERE country.Population > (SELECT Max(country.Population) FROM country WHERE country.Continent = "Asian")

db_name:world_1
gold:SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")
pred:SELECT country.Name FROM country WHERE country.Population > (SELECT Max(country.Population) FROM country WHERE country.Continent = "Asian")

db_name:world_1
gold:SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
pred:SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language != "English"

db_name:world_1
gold:SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
pred:SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language != "English"

db_name:world_1
gold:SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
pred:SELECT country.Code FROM country WHERE countrylanguage.Language = "English" AND country.GovernmentForm != "Republic"

db_name:world_1
gold:SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
pred:SELECT country.Code FROM countrylanguage WHERE countrylanguage.Language != "English" EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = "

db_name:world_1
gold:SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
pred:SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "English" AND country.Continent != "European"

db_name:world_1
gold:SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
pred:SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "English" AND country.Continent != "Europe"

db_name:world_1
gold:select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  "asia"
pred:SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "Chinese"

db_name:world_1
gold:SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"
pred:SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.IsOfficial WHERE countrylanguage.Language = "Chinese" AND country.Continent = "Asia"

db_name:world_1
gold:SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
pred:SELECT country.Name, Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY countrylanguage.CountryCode HAVING Count(*) >= 3

db_name:world_1
gold:SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
pred:SELECT country.Name, Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY countrylanguage.CountryCode HAVING Count(*) > 2

db_name:world_1
gold:SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
pred:SELECT country.GovernmentForm, Avg(country.LifeExpectancy) FROM country GROUP BY country.GovernmentForm HAVING Avg(country.LifeExpectancy) >= 72

db_name:world_1
gold:SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
pred:SELECT country.GovernmentForm, Avg(country.LifeExpectancy) FROM country GROUP BY country.GovernmentForm HAVING Avg(country.LifeExpectancy) > 72

db_name:world_1
gold:SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
pred:SELECT Avg(country.LifeExpectancy), Max(country.LifeExpectancy), country.Continent FROM country GROUP BY country.Continent HAVING Avg(country.LifeExpectancy) < 72

db_name:world_1
gold:SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
pred:SELECT country.Continent, Avg(country.LifeExpectancy), country.LifeExpectancy FROM country GROUP BY country.Continent HAVING Avg(country.LifeExpectancy) < 72

db_name:world_1
gold:SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
pred:SELECT country.Name FROM country WHERE country.Continent = "Europe" AND country.Population > 80000

db_name:world_1
gold:select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
pred:SELECT Sum(country.Population), Avg(country.Population) FROM country WHERE country.SurfaceArea = 3000 AND country.Continent = "North America"

db_name:world_1
gold:select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
pred:SELECT Sum(country.Population), Avg(country.Population) FROM country WHERE country.SurfaceArea > 3000 AND country.Continent = "North America"

db_name:world_1
gold:SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
pred:SELECT countrylanguage.Language, Max(countrylanguage.Percentage) FROM countrylanguage GROUP BY countrylanguage.CountryCode ORDER BY Max(countrylanguage.Percentage) Desc LIMIT 1

db_name:world_1
gold:SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
pred:SELECT countrylanguage.CountryCode, Max(countrylanguage.Percentage) FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Max(countrylanguage.Percentage) Desc LIMIT 1

db_name:world_1
gold:SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
pred:SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = "Spanish" GROUP BY countrylanguage.Percentage ORDER BY Count(*) Desc LIMIT 1

db_name:world_1
gold:SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
pred:SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = "Spanish" GROUP BY countrylanguage.CountryCode ORDER BY Count(*) Desc LIMIT 1

db_name:world_1
gold:SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
pred:SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = "Spanish" GROUP BY countrylanguage.Percentage ORDER BY Count(*) Desc LIMIT 1

db_name:world_1
gold:SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
pred:SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = "Spanish" GROUP BY countrylanguage.CountryCode ORDER BY Count(*) Desc LIMIT 1

db_name:orchestra
gold:SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
pred:SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name ORDER BY Count(*) Desc LIMIT 1

db_name:network_1
gold:SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
pred:SELECT Count(*) FROM Friend

db_name:network_1
gold:SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
pred:SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Highschooler.name = "Kyle"

db_name:network_1
gold:SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
pred:SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id WHERE Highschooler.name = "Kyle"

db_name:network_1
gold:SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
pred:SELECT Count(Friend.friend_id) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Highschooler.name = "Kyle"

db_name:network_1
gold:SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
pred:SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)

db_name:network_1
gold:SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
pred:SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)

db_name:network_1
gold:SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
pred:SELECT Likes.student_id FROM Likes INTERSECT SELECT Likes.student_id FROM Likes

db_name:network_1
gold:SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
pred:SELECT Likes.student_id FROM Likes INTERSECT SELECT Likes.student_id FROM Likes

db_name:network_1
gold:SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
pred:SELECT DISTINCT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Friend

db_name:network_1
gold:SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
pred:SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id

db_name:network_1
gold:SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
pred:SELECT Avg(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend)

db_name:network_1
gold:SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
pred:SELECT Avg(Highschooler.grade) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Friend.friend_id IN (SELECT Friend.friend_id FROM Friend)

db_name:network_1
gold:SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
pred:SELECT Min(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)

db_name:network_1
gold:SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
pred:SELECT Highschooler.grade FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)

db_name:dog_kennels
gold:SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
pred:SELECT Avg(Dogs.age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id

db_name:dog_kennels
gold:SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
pred:SELECT Avg(Dogs.age) FROM Dogs JOIN Treatments ON Treatments.dog_id = Dogs.dog_id

db_name:dog_kennels
gold:SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
pred:SELECT Professionals.professional_id, Professionals.last_name, Professionals.professional_id FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = "Indiana"UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.professional_id FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) > 2

db_name:dog_kennels
gold:SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
pred:SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals WHERE Professionals.state = "Indiana"UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = "Indiana" GROUP BY Professionals.professional_id HAVING Count(*) > 2

db_name:dog_kennels
gold:select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
pred:SELECT Dogs.name FROM Dogs EXCEPT SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.cost_of_treatment > 1000

db_name:dog_kennels
gold:select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
pred:SELECT Dogs.name FROM Dogs EXCEPT SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Charges WHERE Charges.charge_amount > 1000

db_name:dog_kennels
gold:SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
pred:SELECT Professionals.first_name FROM Professionals JOIN Owners EXCEPT SELECT Owners.first_name FROM Professionals JOIN Dogs ON Professionals.professional_id = Dogs.owner_id

db_name:dog_kennels
gold:SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
pred:SELECT Professionals.first_name FROM Professionals JOIN Owners EXCEPT SELECT Owners.first_name FROM Owners JOIN Dogs

db_name:dog_kennels
gold:SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
pred:SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Treatments JOIN Treatments

db_name:dog_kennels
gold:SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
pred:SELECT Breeds.breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY Dogs.breed_code ORDER BY Count(*) Desc LIMIT 1

db_name:dog_kennels
gold:SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
pred:SELECT Breeds.breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY Dogs.breed_code ORDER BY Count(*) Desc LIMIT 1

db_name:dog_kennels
gold:SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
pred:SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Charges ON Charges.charge_id = Charges.charge_id GROUP BY Owners.owner_id ORDER BY Count(*) Desc LIMIT 1

db_name:dog_kennels
gold:SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
pred:SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments GROUP BY Owners.owner_id HAVING Sum(Owners.last_name) > 2 ORDER BY Count(*) Desc LIMIT 1

db_name:dog_kennels
gold:SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
pred:SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatments.cost_of_treatment ORDER BY Sum(Treatments.cost_of_treatment) Asc LIMIT 1

db_name:dog_kennels
gold:SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
pred:SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Charges ON Charges.charge_id = Dogs.dog_id GROUP BY Owners.owner_id ORDER BY Sum(Charges.charge_amount) Desc LIMIT 1

db_name:dog_kennels
gold:SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
pred:SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Charges ON Charges.charge_id = Charges.charge_id GROUP BY Owners.owner_id ORDER BY Sum(Charges.charge_amount) Desc LIMIT 1

db_name:dog_kennels
gold:SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
pred:SELECT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT Avg(Treatments.cost_of_treatment) FROM Treatments JOIN Treatments WHERE Treatments.cost_of_treatment = "professor")

db_name:dog_kennels
gold:SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
pred:SELECT Owners.first_name, Owners.last_name, Dogs.size_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id

db_name:dog_kennels
gold:SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
pred:SELECT Owners.first_name, Owners.last_name, Dogs.size_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id

db_name:dog_kennels
gold:SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
pred:SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id ORDER BY Dogs.breed_code Asc LIMIT 1

db_name:dog_kennels
gold:SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
pred:SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id ORDER BY Dogs.breed_code Asc LIMIT 1

db_name:dog_kennels
gold:SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
pred:SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.date_of_birth Asc LIMIT 1

db_name:dog_kennels
gold:SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
pred:SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.age Desc LIMIT 1

db_name:dog_kennels
gold:SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
pred:SELECT Professionals.role_code, Professionals.street, Professionals.state FROM Professionals WHERE Professionals.city like "%West%"

db_name:dog_kennels
gold:SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
pred:SELECT Professionals.role_code, Professionals.street, Professionals.state, Professionals.state FROM Professionals WHERE Professionals.city like "%West%"

db_name:dog_kennels
gold:SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
pred:SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = "yes" AND Dogs.abandoned_yn = 1

db_name:dog_kennels
gold:SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
pred:SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn like "yes%" OR Dogs.abandoned_yn LIKE 1

db_name:dog_kennels
gold:SELECT max(age) FROM Dogs
pred:SELECT Max(Dogs.age) FROM Dogs ORDER BY Dogs.age Desc LIMIT 1

db_name:dog_kennels
gold:SELECT max(age) FROM Dogs
pred:SELECT Max(Dogs.age) FROM Dogs ORDER BY Dogs.age Desc LIMIT 1

db_name:dog_kennels
gold:SELECT charge_type ,  charge_amount FROM Charges
pred:SELECT Charges.charge_type, Count(*) FROM Charges GROUP BY Charges.charge_type

db_name:dog_kennels
gold:SELECT max(charge_amount) FROM Charges
pred:SELECT Charges.charge_amount FROM Charges ORDER BY Charges.charge_type Desc LIMIT 1

db_name:dog_kennels
gold:SELECT max(charge_amount) FROM Charges
pred:SELECT Charges.charge_amount FROM Charges ORDER BY Charges.charge_type Desc LIMIT 1

db_name:dog_kennels
gold:SELECT email_address ,  cell_number ,  home_phone FROM professionals
pred:SELECT Professionals.email_address, Professionals.home_phone, Owners.home_phone FROM Professionals

db_name:dog_kennels
gold:SELECT email_address ,  cell_number ,  home_phone FROM professionals
pred:SELECT Professionals.email_address, Professionals.home_phone, Owners.home_phone FROM Professionals

db_name:dog_kennels
gold:SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
pred:SELECT Professionals.first_name, Treatments.treatment_id FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id

db_name:dog_kennels
gold:SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
pred:SELECT Professionals.first_name, Professionals.professional_id FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id

db_name:singer
gold:SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
pred:SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY song.Singer_ID HAVING Count(*) > 1

db_name:singer
gold:SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
pred:SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY song.Singer_ID HAVING Count(*) > 1

db_name:real_estate_properties
gold:SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code
pred:SELECT Ref_Property_Types.property_type_description FROM Ref_Property_Types

db_name:real_estate_properties
gold:SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1
pred:SELECT Properties.property_name FROM Properties WHERE Properties.room_count > 1 OR Properties.room_count > 1

